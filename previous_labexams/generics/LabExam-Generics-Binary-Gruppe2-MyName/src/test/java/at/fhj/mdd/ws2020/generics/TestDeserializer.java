package at.fhj.mdd.ws2020.generics;

import org.junit.Assert;
import org.junit.Test;

import at.fhj.mdd.ws2020.generics.model.SetCruiseControlMessage;
import at.fhj.mdd.ws2020.generics.model.SetRadioStationMessage;
import at.fhj.mdd.ws2020.generics.model.StatusMessage;

public class TestDeserializer {
	@Test
	public void testStatusMessageDeserializer() {
		StatusMessage message = new StatusMessageDeserializer()
				.deserialize(new byte[] { 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x22, 0x00,
						0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 });
		Assert.assertEquals(100, message.getSpeed());
		Assert.assertEquals(9.0, message.getBatteryVoltage(), 0.1);
	}

	@Test
	public void testStatusMessageCommonDeserializer() {
		StatusMessage message = new MessageDeserializer<>(StatusMessage.class)
				.deserialize(new byte[] { 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x22, 0x00,
						0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 });
		Assert.assertEquals(100, message.getSpeed());
		Assert.assertEquals(9.0, message.getBatteryVoltage(), 0.1);
	}

	@Test
	public void testSetCruiseControlCommonDeserializer() {
		SetCruiseControlMessage message = new MessageDeserializer<>(SetCruiseControlMessage.class)
				.deserialize(new byte[] { 0x41, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x00,
						0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 });
		Assert.assertEquals(100, message.getMaxSpeed());
		Assert.assertEquals(10.5f, message.getMinDistance(), 0.1f);
	}

	@Test
	public void testSetRadioStationMessageCommonDeserializer() {
		SetRadioStationMessage message = new MessageDeserializer<>(SetRadioStationMessage.class)
				.deserialize(new byte[] { 0x52, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x61, 0x72, 0x20, 0x52, 0x61, 0x64, 0x69,
						0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
						0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
						0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 });
		Assert.assertEquals("Rockstar Radio", message.getRadioStation());
	}
}
